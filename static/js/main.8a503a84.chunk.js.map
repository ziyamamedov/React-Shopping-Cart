{"version":3,"sources":["redux/action-types.js","redux/actions.js","components/ProductItem.js","components/ProductsList.js","components/AddProductForm.js","components/AddProductBtn.js","components/ShopCartDisplay.js","App.js","redux/reducers.js","index.js"],"names":["ADD_PROD","DELETE_PROD","ADD_PR_QUAN","REDUCE_PR_QUAN","TOGGLE_FORM","toggleForm","type","types","ProductItem","id","name","quan","dispatch","useDispatch","className","onClick","payload","addProdQuan","reduceProdQuan","deleteProd","ProductsList","products","useSelector","store","length","map","prod","orderedQuan","AddProductForm","onSubmit","e","preventDefault","target","value","required","AddProductBtn","isFormActive","ShopCartDisplay","prodQuanTotal","forEach","style","marginBottom","App","initialProductsState","allReducers","combineReducers","action","filter","state","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAAaA,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAiB,iBAEjBC,EAAc,cCepB,SAASC,IACd,MAAO,CAAEC,KAAMC,G,WCaFC,MA/Bf,YAA0C,IAAnBC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACzBC,EAAWC,cAEjB,OACE,qBAAIC,UAAU,iEAAd,UACE,sBAAMA,UAAU,6BAAhB,SACY,IAATH,EAAa,OAASA,IAEzB,sBAAMG,UAAU,yCAAhB,SAA0DJ,IAC1D,wBACEI,UAAU,oBACVC,QAAS,kBAAMH,EDDhB,SAAqBH,GAC1B,MAAO,CAAEH,KAAMC,EAAmBS,QAASP,GCAbQ,CAAYR,KAFtC,eAMA,wBACEK,UAAU,oBACVC,QAAS,kBAAMH,EDJhB,SAAwBH,GAC7B,MAAO,CAAEH,KAAMC,EAAsBS,QAASP,GCGhBS,CAAeT,KAFzC,eAMA,wBACEK,UAAU,iBACVC,QAAS,kBAAMH,EDjBhB,SAAoBH,GACzB,MAAO,CAAEH,KAAMC,EAAmBS,QAASP,GCgBbU,CAAWV,KAFrC,wBCASW,MArBf,WACE,IAAMC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAE9C,OACE,oBAAIP,UAAU,gBAAd,SACuB,IAApBO,EAASG,OACR,6CAEAH,EAASI,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAEEjB,GAAIiB,EAAKjB,GACTC,KAAMgB,EAAKhB,KACXC,KAAMe,EAAKC,aAHND,EAAKjB,UCwBPmB,MAjCf,WACE,IAAMhB,EAAWC,cACXQ,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAU9C,OACE,uBACEP,UAAU,sCACVe,SAXiB,SAACC,GHNjB,IAAiBpB,EAAMD,EGO1BqB,EAAEC,iBACFnB,GHRoBF,EGSVoB,EAAEE,OAAO,sBAAsBC,MHTfxB,EGSsBY,EAASG,OAAS,EHR7D,CACLlB,KAAMC,EACNS,QAAS,CAAEP,GAAIA,EAAIC,KAAMA,EAAMiB,YAAa,MGQ5Cf,EAASP,MAIT,UAIE,wBAAOS,UAAU,aAAjB,yBAEE,uBACER,KAAK,OACLI,KAAK,qBACLI,UAAU,eACVoB,UAAQ,OAGZ,wBAAQ5B,KAAK,SAASQ,UAAU,kBAAhC,6BCXSqB,MAdf,WACE,IAAMvB,EAAWC,cACXuB,EAAed,aAAY,SAACC,GAAD,OAAWA,EAAMa,gBAElD,OACE,wBACErB,QAAS,kBAAMH,EAASP,MACxBS,UAAS,cAASsB,EAAe,aAAe,eAFlD,SAIGA,EAAe,QAAU,qBCSjBC,MArBf,WACE,IAAMhB,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAC1CiB,EAAgB,EAMpB,OAJAjB,EAASkB,SAAQ,SAACb,GAChBY,GAAiBZ,EAAKC,eAItB,qBACEb,UAAU,+BACV0B,MAAO,CAAEC,aAAc,QAFzB,SAIE,sBAAK3B,UAAU,wCAAf,UACE,sBAAMA,UAAU,uBAAhB,mBACA,sBAAMA,UAAU,uBAAhB,SAAwCwB,UCOjCI,MAlBf,WAEE,IAAMN,EAAed,aAAY,SAACC,GAAD,OAAWA,EAAMa,gBAElD,OACE,qBAAKtB,UAAU,MAAf,SACE,sBAAKA,UAAU,sDAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,wBAAf,UACE,cAAC,EAAD,IACCsB,GAAgB,cAAC,EAAD,OAEnB,cAAC,EAAD,U,sBCfFO,EAAuB,CAC3B,CAAElC,GAAI,EAAGC,KAAM,QAASiB,YAAa,GACrC,CAAElB,GAAI,EAAGC,KAAM,MAAOiB,YAAa,GACnC,CAAElB,GAAI,EAAGC,KAAM,SAAUiB,YAAa,GACtC,CAAElB,GAAI,EAAGC,KAAM,WAAYiB,YAAa,IAoC1C,IAKeiB,EALKC,YAAgB,CAClCxB,SAlCF,WAAmE,IAA1CA,EAAyC,uDAA9BsB,EAAsBG,EAAQ,uCAChE,OAAQA,EAAOxC,MACb,KAAKC,EACH,MAAM,GAAN,mBAAWc,GAAX,CAAqByB,EAAO9B,UAC9B,KAAKT,EACH,OAAOc,EAAS0B,QAAO,SAACrB,GAAD,OAAUA,EAAKjB,KAAOqC,EAAO9B,WACtD,KAAKT,EACH,OAAOc,EAASI,KAAI,SAACC,GAAD,OAClBA,EAAKjB,KAAOqC,EAAO9B,QAAnB,2BACSU,GADT,IACeC,YAAaD,EAAKC,YAAc,IAC3CD,KAER,KAAKnB,EACH,OAAOc,EAASI,KAAI,SAACC,GAAD,OAClBA,EAAKjB,KAAOqC,EAAO9B,QAAnB,2BACSU,GADT,IACeC,YAAaD,EAAKC,YAAc,IAC3CD,KAER,QACE,OAAOL,IAgBXe,aAXF,WAAmD,IAAxBY,EAAuB,wDAARF,EAAQ,uCAChD,OAAQA,EAAOxC,MACb,KAAKC,EACH,OAAQyC,EACV,QACE,OAAOA,MC9BPzB,EAAQ0B,YACZL,EACAM,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU/B,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJgC,SAASC,eAAe,W","file":"static/js/main.8a503a84.chunk.js","sourcesContent":["export const ADD_PROD = \"ADD_PROD\";\r\nexport const DELETE_PROD = \"DELETE_PROD\";\r\nexport const ADD_PR_QUAN = \"ADD_PR_QUAN\";\r\nexport const REDUCE_PR_QUAN = \"REDUCE_PR_QUAN\";\r\n\r\nexport const TOGGLE_FORM = \"TOGGLE_FORM\";\r\n","import * as types from \"./action-types\";\r\n\r\nexport function addProd(name, id) {\r\n  return {\r\n    type: types.ADD_PROD,\r\n    payload: { id: id, name: name, orderedQuan: 0 },\r\n  };\r\n}\r\n\r\nexport function deleteProd(id) {\r\n  return { type: types.DELETE_PROD, payload: id };\r\n}\r\n\r\nexport function addProdQuan(id) {\r\n  return { type: types.ADD_PR_QUAN, payload: id };\r\n}\r\nexport function reduceProdQuan(id) {\r\n  return { type: types.REDUCE_PR_QUAN, payload: id };\r\n}\r\n\r\nexport function toggleForm() {\r\n  return { type: types.TOGGLE_FORM };\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { deleteProd, addProdQuan, reduceProdQuan } from \"../redux/actions\";\r\n\r\nfunction ProductItem({ id, name, quan }) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <li className=\"product-item d-flex justify-content-between align-items-center\">\r\n      <span className=\"badge bg-warning text-dark\">\r\n        {quan === 0 ? \"Zero\" : quan}\r\n      </span>\r\n      <span className=\"product-item-name p-2 bg-light rounded\">{name}</span>\r\n      <button\r\n        className=\"btn btn-secondary\"\r\n        onClick={() => dispatch(addProdQuan(id))}\r\n      >\r\n        +\r\n      </button>\r\n      <button\r\n        className=\"btn btn-secondary\"\r\n        onClick={() => dispatch(reduceProdQuan(id))}\r\n      >\r\n        -\r\n      </button>\r\n      <button\r\n        className=\"btn btn-danger\"\r\n        onClick={() => dispatch(deleteProd(id))}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import { useSelector } from \"react-redux\";\r\nimport ProductItem from \"./ProductItem\";\r\n\r\nfunction ProductsList() {\r\n  const products = useSelector((store) => store.products);\r\n\r\n  return (\r\n    <ul className=\"products-list\">\r\n      {products.length === 0 ? (\r\n        <h3>No products</h3>\r\n      ) : (\r\n        products.map((prod) => (\r\n          <ProductItem\r\n            key={prod.id}\r\n            id={prod.id}\r\n            name={prod.name}\r\n            quan={prod.orderedQuan}\r\n          />\r\n        ))\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ProductsList;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { addProd } from \"../redux/actions\";\r\nimport { toggleForm } from \"../redux/actions\";\r\n\r\nfunction AddProductForm() {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector((store) => store.products);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addProd(e.target[\"product-name-input\"].value, products.length + 1)\r\n    );\r\n    dispatch(toggleForm());\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className=\"add-product-form d-flex flex-column\"\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <label className=\"form-label\">\r\n        Product Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"product-name-input\"\r\n          className=\"form-control\"\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"btn btn-success\">\r\n        Add product\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddProductForm;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { toggleForm } from \"../redux/actions\";\r\n\r\n//This button opens and closes add-product-form\r\nfunction AddProductBtn() {\r\n  const dispatch = useDispatch();\r\n  const isFormActive = useSelector((store) => store.isFormActive);\r\n\r\n  return (\r\n    <button\r\n      onClick={() => dispatch(toggleForm())}\r\n      className={`btn ${isFormActive ? \"btn-danger\" : \"btn-success\"}`}\r\n    >\r\n      {isFormActive ? \"Close\" : \"Add new product\"}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default AddProductBtn;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nfunction ShopCartDisplay() {\r\n  const products = useSelector((store) => store.products);\r\n  let prodQuanTotal = 0;\r\n\r\n  products.forEach((prod) => {\r\n    prodQuanTotal += prod.orderedQuan;\r\n  });\r\n\r\n  return (\r\n    <nav\r\n      className=\"navbar navbar-light bg-light\"\r\n      style={{ marginBottom: \"20px\" }}\r\n    >\r\n      <div className=\"container-fluid justify-content-start\">\r\n        <span className=\"navbar-brand mb-0 h1\">Cart:</span>\r\n        <span className=\"navbar-brand mb-0 h1\">{prodQuanTotal}</span>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default ShopCartDisplay;\r\n","import ProductsList from \"./components/ProductsList\";\nimport AddProductForm from \"./components/AddProductForm\";\nimport AddProductBtn from \"./components/AddProductBtn\";\nimport ShopCartDisplay from \"./components/ShopCartDisplay\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  //If true the add-new-product form will open\n  const isFormActive = useSelector((store) => store.isFormActive);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container d-flex flex-column justify-content-center\">\n        <ShopCartDisplay />\n        <div className=\"add-new-product-block\">\n          <AddProductBtn />\n          {isFormActive && <AddProductForm />}\n        </div>\n        <ProductsList />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport * as types from \"./action-types\";\r\n\r\nconst initialProductsState = [\r\n  { id: 1, name: \"Phone\", orderedQuan: 0 },\r\n  { id: 2, name: \"Car\", orderedQuan: 0 },\r\n  { id: 3, name: \"Laptop\", orderedQuan: 0 },\r\n  { id: 4, name: \"Computer\", orderedQuan: 0 },\r\n];\r\n\r\nfunction productsReducer(products = initialProductsState, action) {\r\n  switch (action.type) {\r\n    case types.ADD_PROD:\r\n      return [...products, action.payload];\r\n    case types.DELETE_PROD:\r\n      return products.filter((prod) => prod.id !== action.payload);\r\n    case types.ADD_PR_QUAN:\r\n      return products.map((prod) =>\r\n        prod.id === action.payload\r\n          ? { ...prod, orderedQuan: prod.orderedQuan + 1 }\r\n          : prod\r\n      );\r\n    case types.REDUCE_PR_QUAN:\r\n      return products.map((prod) =>\r\n        prod.id === action.payload\r\n          ? { ...prod, orderedQuan: prod.orderedQuan - 1 }\r\n          : prod\r\n      );\r\n    default:\r\n      return products;\r\n  }\r\n}\r\n\r\n//Toggles add-new-product-form\r\nfunction addNewProdReducer(state = false, action) {\r\n  switch (action.type) {\r\n    case types.TOGGLE_FORM:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst allReducers = combineReducers({\r\n  products: productsReducer,\r\n  isFormActive: addNewProdReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { createStore } from \"redux\"; //Function for creating redux store\nimport allReducers from \"./redux/reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App></App>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}